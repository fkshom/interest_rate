import { describe, it, expect } from 'vitest'

import { 元利均等返済, 元金均等返済, type 繰り上げ返済, NPER } from '../interest_rate'

describe('元利均等返済', () => {
  describe('繰り上げ返済なし', () => {
    it('結果が正しいこと', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済 = {}
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(498)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 20100 19934 166 80066".split(" "),
        "2 20100 19967 133 60099".split(" "),
        "3 20100 20000 100 40099".split(" "),
        "4 20100 20034 66 20065".split(" "),
        "5 20098 20065 33 0".split(" "),
      ])
    })
  })
  describe('繰り上げ返済あり', () => {
    it('期間短縮型利用', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済: 繰り上げ返済 = {
        1: {
          金額: 30_000,
          タイプ: '期間短縮型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(315)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(' '),
        "1 50100 49934 166 50066".split(' '),
        "2 20100 20017 83 30049".split(' '),
        "3 20100 20050 50 9999".split(' '),
        "4 10015 9999 16 0".split(' '),
      ])
    })
    it('期間短縮型利用x2', () => {
      const 借入額 = 1000_000
      const 返済期間_月 = 12
      const 繰り上げ返済: 繰り上げ返済 = {
        2: {
          金額: 30_000,
          タイプ: '期間短縮型',
        },
        3: {
          金額: 30_000,
          タイプ: '期間短縮型',
        }
      }
      const 金利変動 = {
        0: 20.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(1000_000)
      expect(actual.返済利息累計).toBe(101404)
      console.log(actual.返済表)
      expect(actual.返済表).toStrictEqual([
        ["i", "返済額", "返済元金", "返済利息", "残債"],
        ["1", "92634", "75968", "16666", "924032"],
        ["2", "122634", "107234", "15400", "816798"],
        ["3", "122634", "109021", "13613", "707777"],
        ["4", "92634", "80838", "11796", "626939"],
        ["5", "92634", "82186", "10448", "544753"],
        ["6", "92634", "83555", "9079", "461198"],
        ["7", "92634", "84948", "7686", "376250"],
        ["8", "92634", "86364", "6270", "289886"],
        ["9", "92634", "87803", "4831", "202083"],
        ["10", "92634", "89266", "3368", "112817"],
        ["11", "92634", "90754", "1880", "22063"],
        ["12", "22430", "22063", "367", "0"]
      ])
    })
    it('返済額軽減型利用', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済: 繰り上げ返済 = {
        1: {
          金額: 30_000,
          タイプ: '返済額軽減型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(372)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 50100 49934 166 50066".split(" "),
        "2 12568 12485 83 37581".split(" "),
        "3 12568 12506 62 25075".split(" "),
        "4 12568 12527 41 12548".split(" "),
        "5 12568 12548 20 0".split(" "),
      ])
    })
    it('期間短縮型・返済額軽減型利用', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 12
      const 繰り上げ返済: 繰り上げ返済 = {
        2: {
          金額: 30_000,
          タイプ: '期間短縮型',
        },
        3: {
          金額: 30_000,
          タイプ: '返済額軽減型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(493)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 8423 8257 166 91743".split(" "),
        "2 38423 38271 152 53472".split(" "),
        "3 38423 38334 89 15138".split(" "),
        "4 2537 2512 25 12626".split(" "),
        "5 2537 2516 21 10110".split(" "),
        "6 2537 2521 16 7589".split(" "),
        "7 2537 2525 12 5064".split(" "),
        "8 2537 2529 8 2535".split(" "),
        "9 2539 2535 4 0".split(" "),
      ])
    })
    it('金利変動あり', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 24
      const 繰り上げ返済: 繰り上げ返済 = {}
      const 金利変動 = {
        0: 2.0 / 100 / 12,
        12: 5.0 / 100 / 12
      }
      const actual = 元利均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(2914)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 4254 4088 166 95912".split(" "),
        "2 4254 4095 159 91817".split(" "),
        "3 4254 4101 153 87716".split(" "),
        "4 4254 4108 146 83608".split(" "),
        "5 4254 4115 139 79493".split(" "),
        "6 4254 4122 132 75371".split(" "),
        "7 4254 4129 125 71242".split(" "),
        "8 4254 4136 118 67106".split(" "),
        "9 4254 4143 111 62963".split(" "),
        "10 4254 4150 104 58813".split(" "),
        "11 4254 4156 98 54657".split(" "),
        "12 4254 4163 91 50494".split(" "),
        "13 4322 4112 210 46382".split(" "),
        "14 4322 4129 193 42253".split(" "),
        "15 4322 4146 176 38107".split(" "),
        "16 4322 4164 158 33943".split(" "),
        "17 4322 4181 141 29762".split(" "),
        "18 4322 4198 124 25564".split(" "),
        "19 4322 4216 106 21348".split(" "),
        "20 4322 4234 88 17114".split(" "),
        "21 4322 4251 71 12863".split(" "),
        "22 4322 4269 53 8594".split(" "),
        "23 4322 4287 35 4307".split(" "),
        "24 4324 4307 17 0".split(" "),
      ])
    })
  })
})

describe('元金均等返済', () => {
  describe('繰り上げ返済なし', () => {
    it('結果が正しいこと', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済 = {}
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元金均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(498)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 20166 20000 166 80000".split(" "),
        "2 20133 20000 133 60000".split(" "),
        "3 20100 20000 100 40000".split(" "),
        "4 20066 20000 66 20000".split(" "),
        "5 20033 20000 33 0".split(" "),
      ])
    })
  })
  describe('繰り上げ返済あり', () => {
    it('期間短縮型利用', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済: 繰り上げ返済 = {
        1: {
          金額: 30_000,
          タイプ: '期間短縮型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元金均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(315)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 50166 50000 166 50000".split(" "),
        "2 20083 20000 83 30000".split(" "),
        "3 20050 20000 50 10000".split(" "),
        "4 10016 10000 16 0".split(" "),
      ])
    })
    it('返済額軽減型利用', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 5
      const 繰り上げ返済: 繰り上げ返済 = {
        1: {
          金額: 30_000,
          タイプ: '返済額軽減型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元金均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(372)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 50166 50000 166 50000".split(" "),
        "2 12583 12500 83 37500".split(" "),
        "3 12562 12500 62 25000".split(" "),
        "4 12541 12500 41 12500".split(" "),
        "5 12520 12500 20 0".split(" "),
      ])
    })
    it('期間短縮型・返済額軽減型利用（リファレンスなし）', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 12
      const 繰り上げ返済: 繰り上げ返済 = {
        2: {
          金額: 30_000,
          タイプ: '期間短縮型',
        },
        3: {
          金額: 30_000,
          タイプ: '返済額軽減型',
        }
      }
      const 金利変動 = {
        0: 2.0 / 100 / 12
      }
      const actual = 元金均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(491)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 8499 8333 166 91667".split(" "),
        "2 38485 38333 152 53334".split(" "),
        "3 38421 38333 88 15001".split(" "),
        "4 2525 2500 25 12501".split(" "),
        "5 2520 2500 20 10001".split(" "),
        "6 2516 2500 16 7501".split(" "),
        "7 2512 2500 12 5001".split(" "),
        "8 2508 2500 8 2501".split(" "),
        "9 2505 2501 4 0".split(" "),
      ])
    })
    it('金利変動あり', () => {
      const 借入額 = 100_000
      const 返済期間_月 = 24
      const 繰り上げ返済: 繰り上げ返済 = {}
      const 金利変動 = {
        0: 2.0 / 100 / 12,
        12: 5.0 / 100 / 12
      }
      const actual = 元金均等返済(借入額, 返済期間_月, 繰り上げ返済, 金利変動)
      expect(actual.返済元金累計).toBe(100_000)
      expect(actual.返済利息累計).toBe(2885)
      expect(actual.返済表).toStrictEqual([
        "i 返済額 返済元金 返済利息 残債".split(" "),
        "1 4332 4166 166 95834".split(" "),
        "2 4325 4166 159 91668".split(" "),
        "3 4318 4166 152 87502".split(" "),
        "4 4311 4166 145 83336".split(" "),
        "5 4304 4166 138 79170".split(" "),
        "6 4297 4166 131 75004".split(" "),
        "7 4291 4166 125 70838".split(" "),
        "8 4284 4166 118 66672".split(" "),
        "9 4277 4166 111 62506".split(" "),
        "10 4270 4166 104 58340".split(" "),
        "11 4263 4166 97 54174".split(" "),
        "12 4256 4166 90 50008".split(" "),
        "13 4375 4167 208 45841".split(" "),
        "14 4358 4167 191 41674".split(" "),
        "15 4340 4167 173 37507".split(" "),
        "16 4323 4167 156 33340".split(" "),
        "17 4305 4167 138 29173".split(" "),
        "18 4288 4167 121 25006".split(" "),
        "19 4271 4167 104 20839".split(" "),
        "20 4253 4167 86 16672".split(" "),
        "21 4236 4167 69 12505".split(" "),
        "22 4219 4167 52 8338".split(" "),
        "23 4201 4167 34 4171".split(" "),
        "24 4188 4171 17 0".split(" "),
      ])
    })
  })
})

describe("Util", () => {
  it("", () => {
    const 金利_月 = 2.0 / 100 / 12
    const 毎月返済額 = 92634
    const 残債 = 816798
    const actual = NPER(金利_月, -1 * 毎月返済額, 残債, undefined, undefined)
    expect(Math.ceil(-1 * NPER(金利_月, 毎月返済額, 残債, undefined, undefined))).toBe(9)
  })
})